<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.leman</groupId>
	<artifactId>dictionar-global</artifactId>
	<name>DictionarGlobal</name>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<properties>
		<manifest.entries.build.version>${project.version}</manifest.entries.build.version>
		<manifest.entries.build.revision>0</manifest.entries.build.revision>
		<maven.test.failure.ignore>true</maven.test.failure.ignore>

		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>

		<!-- Test Only -->
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.surefire.reportsPath>${project.build.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.cobertura.reportPath>${project.build.directory}/site/cobertura/coverage.xml</sonar.cobertura.reportPath>

		<test.build.src.outputDirectory>${project.build.outputDirectory}</test.build.src.outputDirectory>
		<test.failsafe.reportsDirectory>${project.build.directory}/failsafe-reports</test.failsafe.reportsDirectory>
		<!-- End test -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<ant-contrib.version>20020829</ant-contrib.version>
		<cobertura.version>1.9</cobertura.version>

		<download.lib.enable>true</download.lib.enable>


        <spring.version>3.2.8.RELEASE</spring.version>
        <springockito.version>1.0.9</springockito.version>
        <hibernate.version>4.2.10.Final</hibernate.version>
        <ehcache.version>2.6.6</ehcache.version>
        <cglib.version>3.0</cglib.version>
        <javassist.version>3.18.1-GA</javassist.version>
        <jersey.version>2.6</jersey.version>
        <jersey.version.2>2.6</jersey.version.2>
        <h2.version>1.3.165</h2.version>
        <slf4j.version>1.7.5</slf4j.version>
        <dbunit.version>2.4.9</dbunit.version>
        <hibernate.jpamodelgen.version>1.3.0.Final</hibernate.jpamodelgen.version>
        <tomcat-servlet-api.version>7.0.42</tomcat-servlet-api.version>
        <emv-commons-api-rest.version.2>2.5</emv-commons-api-rest.version.2>
        <emv-commons-spring.version>1.3</emv-commons-spring.version>
        <emv-patch-spring-orm.version>1.0</emv-patch-spring-orm.version>

	</properties>

<!--  	<distributionManagement>
		<repository>
			<id>EmvNexus</id>
			<name>Emailvision release Nexus</name>
			<url>http://nexus.emv2.com/nexus/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<id>EmvNexus</id>
			<name>Emailvision snapshot Nexus</name>
			<url>http://nexus.emv2.com/nexus/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
 -->
	<dependencies>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency>
        <dependency>
            <groupId>com.emailvision</groupId>
            <artifactId>emv-commons-spring</artifactId>
            <version>${emv-commons-spring.version}</version>
        </dependency>
        <dependency>
            <groupId>com.emailvision</groupId>
            <artifactId>emv-patch-spring-orm</artifactId>
            <version>${emv-patch-spring-orm.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jms</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- PROVIDED -->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
            <version>${tomcat-servlet-api.version}</version>
            <scope>provided</scope>
        </dependency>

		<!-- TEST -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<version>1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-reflect</artifactId>
			<version>1.2</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito</artifactId>
            <version>${springockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.kubek2k</groupId>
            <artifactId>springockito-annotations</artifactId>
            <version>${springockito.version}</version>
            <scope>test</scope>
        </dependency>
	</dependencies>

	<build>		
		<directory>${project.basedir}/target</directory>
		<outputDirectory>
              ${project.build.directory}/classes
        </outputDirectory>
		<finalName>${project.artifactId}</finalName>
		<testOutputDirectory>
              ${project.build.directory}/test-classes
          </testOutputDirectory>
		<sourceDirectory>
              ${project.basedir}/src/main/java
          </sourceDirectory>
		<testSourceDirectory>
              ${project.basedir}/src/test/java
        </testSourceDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
			</testResource>
		</testResources>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>gwt-maven-plugin</artifactId>
					<version>${gwt.version}</version>
					<configuration>
						<extraJvmArgs>-XX:-FailOverToOldVerifier -XX:-UseSplitVerifier -Xmx2048m -Xms2048m -Xmn512m -Xss1m -XX:+UseParallelGC -XX:+UseParallelOldGC</extraJvmArgs>
					</configuration>
				</plugin>
		
				<plugin>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.2.2</version>
					<configuration>
						<tagBase>
							${scm.url}/tags
						</tagBase>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<archive>
						<manifestEntries>
							<Project-Name>${project.build.finalName}</Project-Name>
							<Build-Version>${manifest.entries.build.version}</Build-Version>
							<Build-Revision>${manifest.entries.build.revision}</Build-Revision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Project-Name>${project.build.finalName}</Project-Name>
							<Build-Version>${manifest.entries.build.version}</Build-Version>
							<Build-Revision>${manifest.entries.build.revision}</Build-Revision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<classesDirectory>${test.build.src.outputDirectory}</classesDirectory>
					<argLine>-XX:-FailOverToOldVerifier</argLine>
					<argLine>-XX:-UseSplitVerifier</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>tomcat-deploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>tomcat-deploy-copy</id>
								<configuration>
									<tasks>
										<taskdef classpathref="maven.runtime.classpath"
											resource="net/sf/antcontrib/antcontrib.properties" />
										<available
											file="${basedir}/target/${project.build.finalName}.war"
											property="war.file.exists" />
										<if>
											<equals arg1="${war.file.exists}" arg2="true" />
											<then>
												<delete failonerror="false">
													<fileset
														file="/usr/local/tomcat/webapps/${project.build.finalName}.war"></fileset>
													<fileset dir="/usr/local/tomcat/webapps/${project.build.finalName}"></fileset>
													<fileset
														dir="/usr/local/tomcat/work/Catalina/localhost/${project.build.finalName}"></fileset>
												</delete>
												<copy file="${basedir}/target/${project.build.finalName}.war"
													todir="/usr/local/tomcat/webapps/" />												
											</then>
											<else>
												<echo message="No war file found." />
											</else>
										</if>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>install</phase>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant-contrib.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>conf-install</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>conf-install-copy</id>
								<configuration>
									<tasks>
										<taskdef classpathref="maven.runtime.classpath"
											resource="net/sf/antcontrib/antcontrib.properties" />
										<available 
											file="${basedir}/src/main/config/"
											property="config.exists" type="dir"/>
										<if>
											<equals arg1="${config.exists}" arg2="true" />
											<then>												
												<copy todir="/" >
													 <fileset dir="${basedir}/src/main/config/" includes="**/*" excludes="*.svn*"/>													 
												</copy>												
											</then>
											<else>
												<echo message="No configuration directory found." />
											</else>
										</if>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>process-resources</phase>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant-contrib.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>testITG</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.12</version>
						<configuration>
							<classesDirectory>${test.build.src.outputDirectory}</classesDirectory>
							<reportsDirectory>${test.failsafe.reportsDirectory}</reportsDirectory>
							<includes>
								<include>**/*TestITG.java</include>
								<include>**/*TestDB.java</include>
							</includes>
							<excludes>
								<exclude>**/*TestGWT.java</exclude>
							</excludes>
							<argLine>-XX:-FailOverToOldVerifier</argLine>
							<argLine>-XX:-UseSplitVerifier</argLine>
						</configuration>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>						
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>cobertura</id>
			<properties>
				<test.build.src.outputDirectory>${project.build.directory}/generated-classes/cobertura</test.build.src.outputDirectory>
				<test.failsafe.reportsDirectory>${project.build.directory}/surefire-reports</test.failsafe.reportsDirectory>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>2.5.1</version>
						<configuration>
							<argLine>-XX:-FailOverToOldVerifier</argLine>
							<argLine>-XX:-UseSplitVerifier</argLine>
							<formats>
								<format>xml</format>
							</formats>
							<instrumentation>
								<ignores>
									<ignore>org.apache.log4j.*</ignore>
								</ignores>
								<excludes>
									<!-- JPA -->
									<exclude>**/jpa/domain/**/*.class</exclude>
									<!-- GWT -->
									<exclude>**/*Pojo.class</exclude>
									<exclude>**/*VO.class</exclude>
									<exclude>**/*Vo.class</exclude>
									<exclude>**/*View.class</exclude>
									<exclude>**/*EntryPoint.class</exclude>
								</excludes>
							</instrumentation>
						</configuration>
						<executions>
							<execution>
								<id>cobertura-instrument</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>instrument</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>cobertura-report</id>
								<phase>verify</phase>
								<configuration>
									<tasks>
										<taskdef classpathref="maven.runtime.classpath"
											resource="tasks.properties" />
										<taskdef classpathref="maven.runtime.classpath"
											resource="net/sf/antcontrib/antcontrib.properties" />
										<available
											file="${project.build.directory}/cobertura/cobertura.ser"
											property="ser.file.exists" />
										<if>
											<equals arg1="${ser.file.exists}" arg2="true" />
											<then>
												<echo message="Executing cobertura report" />
												<mkdir dir="${project.build.directory}/site/cobertura" />
												<cobertura-report format="xml"
													destdir="${project.build.directory}/site/cobertura"
													datafile="${project.build.directory}/cobertura/cobertura.ser" />
											</then>
											<else>
												<echo message="No SER file found." />
											</else>
										</if>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>net.sourceforge.cobertura</groupId>
								<artifactId>cobertura</artifactId>
								<version>${cobertura.version}</version>
							</dependency>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>${ant-contrib.version}</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>DownloadLib</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-dependencies</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<outputDirectory>${project.basedir}/target/lib</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[2.0,)</versionRange>
												<goals>
													<goal>copy-dependencies</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>

</project>


